{"version":3,"sources":["component/main_Content/participate.jsx","component/poll_Form/form.jsx","component/poll_Form/index.jsx","component/main_Content/index.jsx","component/side_Bar/poll_List.jsx","component/side_Bar/index.jsx","data/polls.js","App.js","reportWebVitals.js","index.js"],"names":["ParticipateForm","state","name","selectedOption","errors","handleChange","event","setState","target","value","handleSubmit","preventDefault","validate","isValid","props","getOpinion","pollId","poll","id","reset","length","Object","keys","Form","onSubmit","this","className","Button","color","type","onClick","toggleModal","deletePoll","options","map","opt","FormGroup","Label","CustomInput","onChange","invalid","style","padding","background","borderRadius","vote","totalVote","toFixed","Input","placeholder","FormFeedback","React","Component","MyForm","title","description","buttonValue","handleOptionChange","createOption","deleteOption","for","index","e","defaultOption","shortid","generate","PollForm","createOptions","push","alert","slice","isUpdate","submited","submit","optionErrors","forEach","MainContent","openModal","updatePoll","Modal","isOpen","toggle","unmountOnClose","ModalHeader","ModalBody","PollList","polls","ListGroup","ListGroupItem","selectPoll","cursor","substr","Sidebar","searchTerm","handleSearch","addNewPoll","created","Date","opinions","App","selectedPoll","concat","find","p","filter","performSearch","toLowerCase","includes","response","option","o","opinion","POLLS","Container","Row","Col","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2c060a0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass ParticipateForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    selectedOption: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { errors, isValid } = this.validate();\r\n\r\n    if (isValid) {\r\n      this.props.getOpinion({\r\n        pollId: this.props.poll.id,\r\n        name: this.state.name,\r\n        selectedOption: this.state.selectedOption,\r\n      });\r\n      event.target.reset();\r\n      this.setState({\r\n        name: \"\",\r\n        selectedOption: \"\",\r\n        errors: {},\r\n      });\r\n    } else {\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n  validate = () => {\r\n    const errors = {};\r\n    if (!this.state.name) {\r\n      errors.name = \"Please Provide A name\";\r\n    } else if (this.state.name.length > 100) {\r\n      errors.name = \"Name is too short\";\r\n    }\r\n\r\n    if (!this.state.selectedOption) {\r\n      errors.selectedOption = \"Please Select a value\";\r\n    }\r\n\r\n    return {\r\n      errors,\r\n      isValid: Object.keys(errors).length === 0,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <div className=\"d-flex\">\r\n          <h4>Opinion</h4>\r\n          <Button\r\n            color=\"warning\"\r\n            type=\"button\"\r\n            className=\"ml-auto\"\r\n            onClick={this.props.toggleModal}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            className=\"ml-2\"\r\n            onClick={() => this.props.deletePoll(this.props.poll.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n        {this.props.poll.options.map((opt) => (\r\n          <FormGroup className=\"my-2 d-flex\" key={opt.id}>\r\n            <Label>\r\n              <CustomInput\r\n                type=\"radio\"\r\n                id={opt.id}\r\n                name=\"selectedOption\"\r\n                value={opt.id}\r\n                onChange={this.handleChange}\r\n                invalid={this.state.errors.selectedOption ? true : false}\r\n              />\r\n            </Label>\r\n            {opt.value}\r\n            <span\r\n              style={{\r\n                padding: \"5px 20px\",\r\n                background: \"green\",\r\n                color: \"white\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              className=\"ml-auto\"\r\n            >\r\n              {opt.vote}\r\n            </span>\r\n            <span\r\n              style={{\r\n                padding: \"5px\",\r\n                background: \"orange\",\r\n                color: \"white\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n              className=\"ml-2\"\r\n            >\r\n              {this.props.poll.totalVote > 0\r\n                ? ((100 * opt.vote) / this.props.poll.totalVote).toFixed(2)\r\n                : 0}\r\n              %\r\n            </span>\r\n          </FormGroup>\r\n        ))}\r\n        <FormGroup>\r\n          <Label>Enter Your name</Label>\r\n          <Input\r\n            name=\"name\"\r\n            placeholder=\"Mamun Ahmed\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            invalid={this.state.errors.name ? true : false}\r\n          />\r\n          {this.state.errors.name && (\r\n            <FormFeedback>{this.state.errors.name}</FormFeedback>\r\n          )}\r\n        </FormGroup>\r\n        <Button type=\"submit\">Submit Your Opinion</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default ParticipateForm;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nconst MyForm = ({\r\n  title,\r\n  description,\r\n  options,\r\n  errors,\r\n  buttonValue,\r\n  handleChange,\r\n  handleOptionChange,\r\n  createOption,\r\n  deleteOption,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"title\">Title</Label>\r\n        <Input\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Mamun Ahmed\"\r\n          value={title}\r\n          onChange={handleChange}\r\n          invalid={errors.title ? true : false}\r\n        />\r\n        {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"description\">Description</Label>\r\n        <Input\r\n          name=\"description\"\r\n          id=\"description\"\r\n          placeholder=\"description\"\r\n          value={description}\r\n          onChange={handleChange}\r\n          invalid={errors.description ? true : false}\r\n        />\r\n        {errors.description && (\r\n          <FormFeedback>{errors.description}</FormFeedback>\r\n        )}\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>\r\n          Enter Option\r\n          <Button\r\n            className=\"btn btn-success\"\r\n            onClick={createOption} //! Just One click Create A new Input\r\n          >\r\n            Add Option\r\n          </Button>\r\n        </Label>\r\n        {options.map((opt, index) => (\r\n          <div className=\"d-flex\" key={opt.id}>\r\n            <Input\r\n              value={opt.value}\r\n              className=\"my-2\"\r\n              onChange={(e) => handleOptionChange(e, index)}\r\n              invalid={errors.options && errors.options[index] ? true : false}\r\n            />\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => deleteOption(index)}\r\n              className=\"my-2 ml-2\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </FormGroup>\r\n      <Button color=\"primary\" type=\"submit\">\r\n        {buttonValue}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport MyForm from \"./form\";\r\nconst defaultOption = [\r\n  { id: shortid.generate(), value: \"\", vote: 0 },\r\n  { id: shortid.generate(), value: \"\", vote: 0 },\r\n];\r\n\r\nclass PollForm extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    options: defaultOption,\r\n    errors: {},\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { poll } = this.props;\r\n    if (poll && Object.keys(poll).length > 0) {\r\n      this.setState({\r\n        title: poll.title,\r\n        description: poll.description,\r\n        options: poll.options,\r\n      });\r\n    }\r\n  }\r\n  handleOptionChange = (event, index) => {\r\n    const options = [...this.state.options];\r\n    options[index].value = event.target.value;\r\n    this.setState({ options });\r\n  };\r\n\r\n  createOptions = () => {\r\n    const { options } = this.state;\r\n    if (options.length < 5) {\r\n      options.push({\r\n        id: shortid.generate(),\r\n        vote: 0,\r\n        value: \"\",\r\n      });\r\n      this.setState({ options });\r\n    } else {\r\n      alert(\"You can create ma 5 Options\");\r\n    }\r\n  };\r\n\r\n  deleteOption = (index) => {\r\n    const { options } = this.state;\r\n    if (options.length > 0) {\r\n      options.slice(index, 1);\r\n    }\r\n    this.setState({ options });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { isValid, errors } = this.validate();\r\n    if (isValid) {\r\n      // const { title, description, options } = this.state;\r\n      const poll = {\r\n        title: this.state.title,\r\n        description: this.state.description,\r\n        options: this.state.options,\r\n      };\r\n      if (this.props.isUpdate) {\r\n        poll.id = this.props.poll.id;\r\n        this.props.submited(poll);\r\n        alert(\"Update successfully\");\r\n      } else {\r\n        this.props.submit(poll);\r\n        event.target.reset();\r\n        this.setState({\r\n          title: \"\",\r\n          description: \"\",\r\n          options: defaultOption,\r\n          errors: {},\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n    const { title, description, options } = this.state;\r\n    if (!title) {\r\n      errors.title = \"Please Provide A Title\";\r\n    } else if (title.length < 20) {\r\n      errors.title = \"Please Provide minimum 20 charactar\";\r\n    } else if (title.length > 100) {\r\n      errors.title = \"Title is too long\";\r\n    }\r\n\r\n    if (!description) {\r\n      errors.description = \"Please Provide A description\";\r\n    } else if (description.length > 500) {\r\n      errors.description = \"Description too long\";\r\n    }\r\n\r\n    const optionErrors = [];\r\n\r\n    options.forEach((opt, index) => {\r\n      if (!opt.value) {\r\n        optionErrors[index] = \"Option Text Empty\";\r\n      } else if (opt.value.length > 100) {\r\n        optionErrors[index] = \"Option description is too short\";\r\n      }\r\n    });\r\n    if (optionErrors.length > 0) {\r\n      errors.options = optionErrors;\r\n    }\r\n    return {\r\n      errors,\r\n      isValid: Object.keys(errors).length === 0,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { title, description, options, errors } = this.state;\r\n    return (\r\n      <MyForm\r\n        title={title}\r\n        description={description}\r\n        options={options}\r\n        errors={errors}\r\n        buttonValue={this.props.buttonValue || \"Create Poll\"}\r\n        handleChange={this.handleChange}\r\n        handleOptionChange={this.handleOptionChange}\r\n        createOption={this.createOptions}\r\n        deleteOption={this.deleteOption}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default PollForm;\r\n","import React from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport ParticipateForm from \"./participate\";\r\nimport MyForm from \"../poll_Form\";\r\n\r\nclass MainContent extends React.Component {\r\n  state = {\r\n    openModal: false,\r\n  };\r\n  toggleModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (Object.keys(this.props.poll).length === 0) {\r\n      return (\r\n        <div>\r\n          <h3>Welcome to My Application</h3>\r\n          <p>\r\n            You can create as many poll as you want. click the new button to\r\n            create a new poll. To check details of a poll please select from the\r\n            left sidebar. By selecting a poll you can check it's details,\r\n            participate and check others opinion about this poll\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    const { poll, getOpinion, updatePoll, deletePoll } = this.props;\r\n    return (\r\n      <div>\r\n        <h3>{poll.title}</h3>\r\n        <p>{poll.description}</p>\r\n        <hr />\r\n        <ParticipateForm\r\n          poll={poll}\r\n          getOpinion={getOpinion}\r\n          toggleModal={this.toggleModal}\r\n          deletePoll={deletePoll}\r\n        />\r\n        <div>\r\n          <Modal\r\n            isOpen={this.state.openModal}\r\n            toggle={this.toggleModal}\r\n            unmountOnClose={true}\r\n          >\r\n            <ModalHeader toggle={this.toggleModal}>Modal title</ModalHeader>\r\n            <ModalBody>\r\n              <MyForm\r\n                poll={poll}\r\n                isUpdate={true}\r\n                submited={updatePoll}\r\n                buttonValue=\"Update Form\"\r\n              />\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainContent;\r\n","import React from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst PollList = (props) => {\r\n  if (props.polls.length === 0) {\r\n    return <p>There are no poll</p>;\r\n  }\r\n  return (\r\n    <ListGroup>\r\n      {props.polls.map((poll) => (\r\n        <ListGroupItem\r\n          key={poll.id}\r\n          onClick={() => props.selectPoll(poll.id)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {poll.title.length >= 32\r\n            ? poll.title.substr(0, 32) + \"...\"\r\n            : poll.title}\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PollList;\r\n","import React from \"react\";\r\nimport { Input, Button, Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport PollList from \"./poll_List\";\r\nimport PollForm from \"../poll_Form\";\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    openModal: false,\r\n  };\r\n  toggleModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ background: \"#efefef\", padding: \"20px\" }}>\r\n        <div className=\"d-flex mb-5\">\r\n          <Input\r\n            type=\"search\"\r\n            value={this.props.searchTerm}\r\n            onChange={(e) => this.props.handleSearch(e.target.value)}\r\n            placeholder=\"Search\"\r\n          />\r\n          <Button color=\"success\" className=\"ml-2\" onClick={this.toggleModal}>\r\n            New\r\n          </Button>\r\n        </div>\r\n        <h3>List of Poll</h3>\r\n        <hr />\r\n        <PollList polls={this.props.polls} selectPoll={this.props.selectPoll} />\r\n        <Modal\r\n          unmountOnClose={true}\r\n          isOpen={this.state.openModal}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>Create New Item</ModalHeader>\r\n          <ModalBody>\r\n            <PollForm submit={this.props.addNewPoll} />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Sidebar;\r\n","const polls = [\r\n  {\r\n    id: '9874',\r\n    title: 'What is Your Favorite Programming language',\r\n    description: 'There are lot of popular programming language available. Among them what is your favorite',\r\n    options: [\r\n      {\r\n        id: '38433',\r\n        value: 'C Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '38d433',\r\n        value: 'Java Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '384s33',\r\n        value: 'Javascript Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '3843333',\r\n        value: 'Python Programming',\r\n        vote: 0\r\n      },\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n  {\r\n    id: '9ds874',\r\n    title: 'What is Your Favorite Programming language',\r\n    description: 'There are lot of popular programming language available. Among them what is your favorite',\r\n    options: [\r\n      {\r\n        id: '3844333',\r\n        value: 'C Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '38d2433',\r\n        value: 'Java Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '384s133',\r\n        value: 'Javascript Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '38433433',\r\n        value: 'Python Programming',\r\n        vote: 0\r\n      },\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n  {\r\n    id: '9ds425874',\r\n    title: 'What is Your Favorite Programming language',\r\n    description: 'There are lot of popular programming language available. Among them what is your favorite',\r\n    options: [\r\n      {\r\n        id: '3844242333',\r\n        value: 'C Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '38567d2433',\r\n        value: 'Java Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '3384s53133',\r\n        value: 'Javascript Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '3842333433',\r\n        value: 'Python Programming',\r\n        vote: 0\r\n      },\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n  {\r\n    id: '9ds53874',\r\n    title: 'What is Your Favorite Programming language',\r\n    description: 'There are lot of popular programming language available. Among them what is your favorite',\r\n    options: [\r\n      {\r\n        id: '384434333',\r\n        value: 'C Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '38d4732433',\r\n        value: 'Java Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '3824s434133',\r\n        value: 'Javascript Programming',\r\n        vote: 0\r\n      },\r\n      {\r\n        id: '3845524333433',\r\n        value: 'Python Programming',\r\n        vote: 0\r\n      },\r\n    ],\r\n    created: new Date(),\r\n    totalVote: 0,\r\n    opinions: []\r\n  },\r\n]\r\n\r\nexport default polls","import React from 'react'\nimport shortid from 'shortid'\nimport {Container, Row, Col} from 'reactstrap'\nimport MainContent from './component/main_Content'\nimport Sidebar from './component/side_Bar'\n\nimport POLLS from './data/polls'\n\nclass App extends React.Component {\n  state = {\n    polls: [],\n    selectedPoll: {},\n    searchTerm: ''\n  }\n  componentDidMount() {\n    this.setState({polls: POLLS})\n  }\n\n  addNewPoll = poll => {\n    poll.id = shortid.generate()\n    poll.created = new Date()\n    poll.totalVote = 0\n    poll.opinions = []\n    this.setState({polls: this.state.polls.concat(poll)})\n  }\n\n  updatePoll = updatePoll => {\n    const polls = [...this.state.polls]\n    const poll = polls.find(p => p.id === updatePoll.id)\n    // poll.title = updatePoll.title\n    poll.description = updatePoll.description\n    poll.options = updatePoll.options\n    this.setState({polls})\n  }\n\n\n  deletePoll = pollId => {\n    const polls = this.state.polls.filter(p => p.id !== pollId)\n    this.setState({polls, selectedPoll: {}})\n  }\n\n  selectPoll = pollId => {\n    const poll  = this.state.polls.find(p => p.id === pollId)\n    this.setState({selectedPoll: poll})\n  }\n\n  handleSearch = value => {\n  this.setState({searchTerm: value})\n  }\n  performSearch = () => {\n    return this.state.polls.filter(poll => poll.title.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\n  }\n\n  getOpinion = (response) => {\n    const { polls } = this.state\n    const poll = polls.find(p => p.id === response.pollId)\n    const option = poll.options.find(o => o.id === response.selectedOption)\n    \n    poll.totalVote++\n    option.vote++\n    const opinion = {  \n      id: shortid.generate(),\n      name: response.name,\n      selectedOption: response.selectedOption\n\n    }\n    poll.opinions.push(opinion)\n    this.setState({polls})\n}\n\n\n\n  render() {\n    const polls = this.performSearch()\n    return (\n      <Container className=\"my-5\">\n        <Row>\n          <Col md={4}>\n            <Sidebar\n              polls={polls}\n              searchTerm={this.state.searchTerm}\n              handleSearch={this.handleSearch}\n              selectPoll={this.selectPoll}\n              addNewPoll={this.addNewPoll}\n            />\n          </Col>\n          <Col md={8}>\n            <MainContent\n              poll={this.state.selectedPoll}\n              getOpinion={this.getOpinion}\n              updatePoll={this.updatePoll}\n              deletePoll={this.deletePoll}\n            />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}